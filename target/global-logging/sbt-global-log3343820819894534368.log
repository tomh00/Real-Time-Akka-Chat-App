[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Administrator\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Administrator\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.3 (Oracle Corporation Java 19.0.2)
[debug]       Load.loadUnit: plugins took 152.15ms
[debug]       Load.loadUnit: defsScala took 0.6157ms
[debug] [Loading] Scanning directory C:\Users\Administrator\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Administrator\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 35.4293 ms
[debug]           Load.resolveProject(global-plugins) took 97.6994ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Administrator\.sbt\1.0\plugins, plugins: List(<none>))) took 168.5556ms
[debug] [Loading] Done in C:\Users\Administrator\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 216.2808ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3681ms
[debug]     Load.loadUnit(file:/C:/Users/Administrator/.sbt/1.0/plugins/, ...) took 385.3806ms
[debug]   Load.apply: load took 751.1915ms
[debug]   Load.apply: resolveProjects took 14.3138ms
[debug]   Load.apply: finalTransforms took 138.2472ms
[debug]   Load.apply: config.delegates took 17.0788ms
[debug]   Load.apply: Def.make(settings)... took 878.9049ms
[debug]   Load.apply: structureIndex took 180.1036ms
[debug]   Load.apply: mkStreams took 2.123ms
[info] loading global plugins from C:\Users\Administrator\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4490.9924ms
[debug]           Load.loadUnit: plugins took 49.5691ms
[debug]           Load.loadUnit: defsScala took 0.0074ms
[debug] [Loading] Scanning directory C:\Users\Administrator\Documents\scala-akka\project
[debug]             Load.loadUnit: mkEval took 22.8308ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Administrator\Documents\scala-akka\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.9123 ms
[info] loading settings for project scala-akka-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(scala-akka-build) took 4.6306ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-akka-build, base: C:\Users\Administrator\Documents\scala-akka\project, plugins: List(<none>))) took 8.5075ms
[debug] [Loading] Done in C:\Users\Administrator\Documents\scala-akka\project, returning: (scala-akka-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3760.8488ms
[debug]           Load.loadUnit: cleanEvalClasses took 10.981ms
[debug]         Load.loadUnit(file:/C:/Users/Administrator/Documents/scala-akka/project/, ...) took 3822.6917ms
[debug]       Load.apply: load took 3824.8846ms
[debug]       Load.apply: resolveProjects took 0.1442ms
[debug]       Load.apply: finalTransforms took 24.9134ms
[debug]       Load.apply: config.delegates took 0.7266ms
[debug]       Load.apply: Def.make(settings)... took 172.1828ms
[debug]       Load.apply: structureIndex took 51.2557ms
[debug]       Load.apply: mkStreams took 0.0052ms
[info] loading project definition from C:\Users\Administrator\Documents\scala-akka\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 7219.6248ms
[debug]     Load.loadUnit: defsScala took 0.0057ms
[debug] [Loading] Scanning directory C:\Users\Administrator\Documents\scala-akka
[debug]       Load.loadUnit: mkEval took 0.9133ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtide.ConfigPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.5657 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 58.6022ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Administrator\Documents\scala-akka, plugins: List(<none>))) took 65.6823ms
[debug] [Loading] Done in C:\Users\Administrator\Documents\scala-akka, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 5933.5098ms
[debug]     Load.loadUnit: cleanEvalClasses took 99.4963ms
[debug]   Load.loadUnit(file:/C:/Users/Administrator/Documents/scala-akka/, ...) took 13255.9249ms
[debug] Load.apply: load took 13258.5457ms
[debug] Load.apply: resolveProjects took 0.2096ms
[debug] Load.apply: finalTransforms took 50.691ms
[debug] Load.apply: config.delegates took 0.4708ms
[debug] Load.apply: Def.make(settings)... took 201.694ms
[debug] Load.apply: structureIndex took 61.3075ms
[debug] Load.apply: mkStreams took 0.0064ms
[info] set current project to Akka-Scala-Chat-App (in build file:/C:/Users/Administrator/Documents/scala-akka/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * root / idePackagePrefix
[warn]   +- C:\Users\Administrator\Documents\scala-akka\build.sbt:8
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 52585 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 52585, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Akka-Scala-Chat-App (in build file:/C:/Users/Administrator/Documents/scala-akka/)
[debug] > Exec(idea-shell, None, None)
